'use client'
import { Button } from '@mui/material'
import StarterKit from '@tiptap/starter-kit'
import {
  MenuButtonBold,
  MenuButtonItalic,
  MenuControlsContainer,
  MenuDivider,
  MenuSelectHeading,
  RichTextEditor,
  type RichTextEditorRef,
} from 'mui-tiptap'
import { useRef } from 'react'
import React from 'react'
import { useForm } from 'react-hook-form'
import { z } from 'zod'
import { zodResolver } from '@hookform/resolvers/zod'
import Paper from '@avc/components/ui/paper'
import Typography from '@avc/components/ui/typography'
import Box from '@mui/material/Box'
import Stack from '@mui/material/Stack'
import FormLabel from '@avc/components/ui/label'
import TextField from '@avc/components/ui/text-field'
import Card, { CardContent, CardActions } from '@avc/components/ui/card'
import Switch from '@avc/components/ui/switch'
import List, { ListItem, ListItemText } from '@avc/components/ui/list'
import AssetPickerButton from '@avc/features/assets/components/asset-picker'
import TestPicker from '../pickers/test-picker'

const updateProductSchema = z.object({
  autoGenerated: z.boolean().optional(),
  description: z.string().min(1, 'Açıklama zorunludur'),
  draft: z.boolean().optional(),
  facetValueIds: z.array(z.string()).optional(),
  name: z.string().min(1, 'Ürün adı zorunludur'),
  slug: z.string().min(1, 'Slug zorunludur'),
})

type UpdateProductInput = z.infer<typeof updateProductSchema>

export default function UpdateProductForm() {
  const rteRef = useRef<RichTextEditorRef>(null)
  const {
    control,
    handleSubmit,
    formState: { errors },
  } = useForm<UpdateProductInput>({
    resolver: zodResolver(updateProductSchema),
    defaultValues: {
      autoGenerated: false,
      draft: false,
      facetValueIds: [],
    },
  })

  const onSubmit = (data: UpdateProductInput) => {
    console.log('Submitted data:', data)
  }

  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <Stack direction="row">
        <Paper
          sx={{
            minHeight: '100vh',
            borderRadius: 0,
            flex: 3,
            pb: 4,
            borderRight: '1px solid',
            borderColor: 'divider',
          }}
        >
          <Stack gap={4} direction="column">
            <Box
              sx={{
                py: 4,
                borderBottom: '1px solid',
                borderColor: 'divider',
              }}
            >
              <Typography sx={{ px: 4 }} variant="h5" fontWeight="bold">
                Ürün Bilgilerini Güncelle
              </Typography>
            </Box>
            <Box sx={{ display: 'flex', gap: 2, px: 4 }}>
              <TextField placeholder="Ürün adı buraya..." fullWidth />
              <TextField placeholder="Slug" fullWidth />
            </Box>
            <Box sx={{ px: 4 }}>
              <FormLabel>Ürün Açıklaması</FormLabel>
              <br />
              <Typography variant="caption" color="textDisabled">
                Bu ürün için kısa bir açıklama yazın
              </Typography>
              <RichTextEditor
                ref={rteRef}
                extensions={[StarterKit]}
                renderControls={() => (
                  <MenuControlsContainer>
                    <MenuSelectHeading />
                    <MenuDivider />
                    <MenuButtonBold />
                    <MenuButtonItalic />
                  </MenuControlsContainer>
                )}
                editorProps={{
                  attributes: {
                    style: 'height: 200px; overflow-y: auto;',
                  },
                }}
              />
            </Box>
            <Box sx={{ px: 4 }}>
              <AssetPickerButton />
            </Box>
          </Stack>
        </Paper>
        <Box sx={{ flex: 1, p: 2 }}>
          <Stack gap={4} direction="column">
            <PublishCard />
          </Stack>
        </Box>
      </Stack>
      <TestPicker />
    </form>
  )
}

function PublishCard() {
  return (
    <Card sx={{ p: 0 }}>
      <React.Fragment>
        <CardContent sx={{ p: 0 }}>
          <Box
            sx={{
              display: 'flex',
              justifyContent: 'space-between',
              borderBottom: '1px solid',
              borderColor: 'divider',
              p: 2,
            }}
          >
            <Box>
              <Typography variant="h6">Yayınla</Typography>
              <Typography variant="body2">Ürünü şimdi yayınlayın</Typography>
            </Box>
            <Box>
              <Switch />
            </Box>
          </Box>
          <Box sx={{ p: 2, borderBottom: '1px solid', borderColor: 'divider' }}>
            <List>
              <ListItem disablePadding>
                <ListItemText primary="Durum" />
                <ListItemText
                  primary="Yayında"
                  sx={{ fontWeight: 'semibold' }}
                />
              </ListItem>
              <ListItem disablePadding>
                <Box
                  component="span"
                  sx={{
                    background: 'rgb(92, 168, 67)',
                    width: 16,
                    height: 16,
                    borderRadius: '50%',
                    mr: 1,
                  }}
                />
                <ListItemText primary="Seo skoru" />
                <ListItemText primary="İyi" sx={{ fontWeight: 'bold' }} />
              </ListItem>
            </List>
          </Box>
        </CardContent>
        <CardActions sx={{ p: 2 }}>
          <Button variant="contained" size="large" fullWidth>
            <Typography
              variant="button"
              sx={{ textTransform: 'none' }}
              fontWeight="bold"
            >
              Şimdi yayınla
            </Typography>
          </Button>
        </CardActions>
      </React.Fragment>
    </Card>
  )
}
